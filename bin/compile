#!/usr/bin/env bash

set -e

NODEJS_BUILDPACK="https://github.com/cloudfoundry/nodejs-buildpack.git"
JAVA_BUILDPACK="https://github.com/cloudfoundry/java-buildpack.git"

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

unset GIT_DIR

function handle_buildpack() {
  BUILDPACK=$3
  
  dir=$(mktemp -t buildpackXXXXX)
  rm -rf $dir

  url=${BUILDPACK%#*}
  branch=${BUILDPACK#*#}

  if [ "$branch" == "$url" ]; then
    branch=""
  fi

  if [ "$url" != "" ]; then
    echo "=====> Downloading Buildpack: $url"

    if [[ "$url" =~ \.tgz$ ]]; then
      mkdir -p "$dir"
      curl -s "$url" | tar xvz -C "$dir" >/dev/null 2>&1
    else
      git clone $url $dir >/dev/null 2>&1
	  if [ -f "$dir/.gitmodules" ]; then
        echo "=====> Detected git submodules. Initializing..."
        (cd $dir && git submodule update --init --recursive)
      fi
    fi

    cd $dir
    
    if [ "$branch" != "" ]; then
      git checkout $branch >/dev/null 2>&1
    fi

    chmod +x $dir/bin/{detect,compile,release}

    set +e
    framework=$($dir/bin/detect $1)
	echo $framework
    exit_code=$?
    set -e
    
    if [ $exit_code == 0 ]; then
      echo "=====> Detected Framework: $framework"
      $dir/bin/compile $1 $2

      if [ $? != 0 ]; then
        exit 1
      fi
      
      # check if the buildpack left behind an environment for subsequent ones
      if [ -e $dir/export ]; then
        source $dir/export
      fi
     
      echo "=====> Compile ended successfully"
      
      if [ ! -f $1/last_pack_release.out ]; then
        echo "======> Preparing release with: $dir/bin/release $1"
        $dir/bin/release $1 > $1/last_pack_release.out
        echo "======>> `cat $1/last_pack_release.out`"
      fi

      return 0 # Found a framework. No need to search more
    else
      echo "=====> problem with detect $framework - exit code $exit_code"
    fi
  fi
  
  set +e
  return 1
}

should_install_java="0"

for BUILDPACK in $NODEJS_BUILDPACK; do
  set +e
  handle_buildpack $1 $2 $BUILDPACK
  exit_code=$?
  set -e

  if [ $exit_code == 0 ]; then
    should_install_java="1"
    break
  fi
done

if [ $should_install_java == "0" ]; then
  echo " !     No nodejs buildpack was installed. Aborting."
  exit 1
else
  handle_buildpack $1 $2 -p https://github.com/cloudfoundry/java-buildpack.git $JAVA_BUILDPACK
fi
